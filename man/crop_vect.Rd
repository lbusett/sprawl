% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crop_vect.R
\name{crop_vect}
\alias{crop_vect}
\title{crop a vector on the extent of a different spatial file}
\usage{
crop_vect(in_vect, in_obj, out_file = NULL, verbose = TRUE)
}
\arguments{
\item{in_vect}{PARAM_DESCRIPTION}

\item{in_obj}{PARAM_DESCRIPTION}

\item{out_file}{PARAM_DESCRIPTION, Default: FALSE}

\item{verbose}{PARAM_DESCRIPTION, Default: FALSE}
}
\value{
OUTPUT_DESCRIPTION
}
\description{
Function allowing to crop an input vector object or shapefile on the extent of a
different spatial object. in_vect must be an *sp, *sf object or vector file, while in_obj should
be a valid spatial object (sp, sf, vector file, raster or raster file name)
}
\details{
DETAILS
}
\examples{
\dontrun{
 library(raster)
 library(sf)
 in_polys <- read_vect(system.file("extdata/shapes", "lc_polys.shp",
                                         package = "sprawl.data"))
 in_rast <- raster::raster(system.file("extdata/MODIS_test",
                                  "EVIts_test.tif", package = "sprawl.data"))
 in_polys_cropped <- crop_vect(in_polys, in_rast)

 # Retrieve a polygon representing in_rast extent and reproject it
 rast_extent <- as(get_extent(in_rast), "sfc_POLYGON") \%>\%
    sf::st_transform(get_proj4string(in_polys))
 par(mfrow=c(1,2))
 plot(in_polys[1])
 plot(rast_extent, add = T)
 plot(in_polys_cropped[1])
 plot(rast_extent, add = T)
 }
}
\seealso{
\code{\link[sp]{proj4string}}
}
