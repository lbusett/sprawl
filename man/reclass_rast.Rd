% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reclass_rast.R
\name{reclass_rast}
\alias{reclass_rast}
\title{reclass_rast}
\usage{
reclass_rast(in_rast, rcl_mat, out_rast = NULL, r_out = TRUE,
  overwrite = FALSE)
}
\arguments{
\item{in_rast}{Input raster file or "R" raster layer to be reclassified}

\item{rcl_mat}{\code{data.frame} 3 column data frame with column names equal to \code{start}, \code{end} and \code{new}
Each line specifies an intervals of values in the original raster and the value they will
assume in the output. Can be created for example as follows:
rcl_mat <- tibble::tribble(
~start, ~end, ~new,
0,   0,   NA,   # --> 0 in input goes to NA in output
1,   4,   1,    # --> values from 1 to 4 (excluded) go to 1 in output
...,  ..., ...,
...,  ..., ...,
9,  11,   0,   # --> values from 9 to 11 (excluded) go to 0 in output
11, 100, NA)   # --> everything equal/above 11 go to NA in output

\strong{IMPORTANT ! Intervals are CLOSED on THE LEFT and OPEN ON THE RIGHT !} - see examples !!!! -}

\item{out_rast}{\code{character} Name of the output raster file. If NULL, a temporary raster is created
in "R" tempdir(), Default: NULL}

\item{r_out}{\code{logical} If TRUE, the reclassified raster is returned to the caller, Default: TRUE}

\item{overwrite}{\code{logical} If TRUE and `out_rast`` already exists, the file is overwritten,
Default: FALSE}
}
\value{
if (r_out == TRUE), "R" \code{raster} object corresponding to the reclassified raster,
otherwise  the name of the file where it was saved (either corresponfing to \code{out_rast} or to the
name of thetemporary file created (if \code{out_rast == NULL}))
}
\description{
FUNCTION_DESCRIPTION
}
\details{
reclass_rast

this is a simple wrapper for the \link[raster:reclassify]{raster::reclassify} function, providing somehow easier
use and extended I/O functionality
}
\examples{
\dontrun{
# reclassify a land cover map with N classes to a 0-1 mask, retaining classes 5 and 9, putting
# the rest to 0 and values >= 11 to NA
# Open  the masking file
in_mask <- raster(in_maskfile)
# setup the reclassification matrix

 rcl_mat <- tibble::tribble(
                ~start, ~end, ~new,
                     0,   0,   NA,
                     1,   5,   0,
                     5,   6,   1,
                     6,   9,   1,
                     9,  11,   1,
                     11, 100, NA)

reclass_file = "/home/lb/Temp/buttami/pippo_reclass.tif"
outmask = reclass_rast(in_rast,
                       rcl_mat,
                       r_out = TRUE)
plot(outmask)
}
}
\seealso{
\code{\link[raster]{reclassify}}
}
