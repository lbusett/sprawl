% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reclass_rast.R
\name{reclass_rast}
\alias{reclass_rast}
\title{reclassify values of a raster}
\usage{
reclass_rast(in_rast, reclass_matrix, to_file = FALSE, out_rast = NULL,
  overwrite = FALSE)
}
\arguments{
\item{in_rast}{Input raster file or "R" raster layer to be reclassified}

\item{reclass_matrix}{\code{data.frame} 3 column data frame with column names equal to \code{start}, \code{end} and \code{new}
Each line specifies an intervals of values in the original raster and the value they will
assume in the output. See Details. \cr  \strong{IMPORTANT !} Intervals in \code{reclass_matrix} will be considered
as \strong{CLOSED on THE LEFT and OPEN ON THE RIGHT !} - see examples !!!! -}

\item{to_file}{\code{logical} If TRUE, the reclassified raster is saved to a tiff file and its
name is returned to the caller, Default: TRUE}

\item{out_rast}{\code{character} Name of the output raster file. If NULL and to_file == TRUE ,
the raster is saved to a file in the \code{R} temporary folder
in "R" tempdir(), Default: NULL}

\item{overwrite}{\code{logical} If TRUE and `out_rast`` already exists, the file is overwritten,
Default: FALSE}
}
\value{
\itemize{
\item if to_file == FALSE:  \code{*raster} corresponding to the reclassified raster
\item if to_file == TRUE: name of the file where it was saved (either corresponfing to \code{out_rast}
or to the name of the temporary file created (if \code{out_rast == NULL}))
}
}
\description{
function to reclassify values of a raster object or raster file based on a
reclassification matrix which specifies which value in the output should be taken by different
\strong{intervals} of values of the input raster (simple wrapper for the
raster::reclassify function, providing a (somehow) easier and extended I/O functionality)
}
\details{
\code{reclass_matrix} must be a 3-columns \code{data.frame} (or similar), including the \code{start}, \code{end} and
\code{new} columns. It can be easily created by, for example:\preformatted{reclass_matrix <- tribble(~start, ~end, ~new,
                               0,    1,   NA, # values >=0 and < 1 will be set to NA
                               1,    5,   1,  # values >=1 and < 5 will be set to 1
                               5,    7,   2,  # values >=5 and < 7 will be set to 2
                             ...,  ..., ...,
                             ...,  ..., ...,
                              11, 100, NA)   # values >=11 and < 100 will be set to NA
}

, or:\preformatted{reclass_matrix <- data.frame(start = c(0,  1, 5, ..., ..., 11),
                             end   = c(1,  5, 7, ..., ..., 100),
                             new   = c(NA, 1, 2, ..., ..., NA)
}
}
\examples{
\dontrun{
# reclassify a land cover map with N classes to a 0-1 mask, retaining classes 5 and 9, putting
# the rest to 0 and values >= 11 to NA
# Open  the masking file
in_mask <- raster(in_maskfile)
# setup the reclassification matrix

 reclass_matrix <- tibble::tribble(
                ~start, ~end, ~new,
                     0,   0,   NA,
                     1,   5,   0,
                     5,   6,   1,
                     6,   9,   1,
                     9,  11,   1,
                     11, 100, NA)

reclass_file = "/home/lb/Temp/buttami/pippo_reclass.tif"
outmask = reclass_rast(in_rast,
                       reclass_matrix,
                       r_out = TRUE)
plot(outmask)
}
}
\seealso{
\code{\link[raster]{reclassify}}
}
