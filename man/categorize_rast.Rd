% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/categorize_rast.R
\name{categorize_rast}
\alias{categorize_rast}
\alias{reclass_rast}
\title{reclassify values of a raster}
\usage{
categorize_rast(in_rast, class_matrix, out_file = NULL,
  out_type = "rastobject", overwrite = FALSE, verbose = TRUE)
}
\arguments{
\item{in_rast}{Input raster file or "R" raster layer to be reclassified}

\item{class_matrix}{\code{data.frame} 3 column data frame with column names equal
to \code{start}, \code{end}, \code{new} and \code{label}. Each line specifies an interval of values in
the original raster and the value they will assume in the output.
\cr  \strong{IMPORTANT !} Intervals in \code{class_matrix} will be considered
as \strong{CLOSED on THE LEFT and OPEN ON THE RIGHT !} - see examples !!!! -}

\item{out_file}{\code{character} Name of the output raster file. If NULL and to_file == TRUE ,
the raster is saved to a file in the \code{R} temporary folder
in "R" tempdir(), Default: NULL}

\item{out_type}{\code{character}
\itemize{
\item if == "rastobj", return a \code{Raster} object;
\item if == "filename", return the filename of the masked layer (GTiff or gdal vrt format
depending on other arguments - see below)
Default: "rastobj" (If an invalid string is provided, defaults to \code{rastobj})
}}

\item{overwrite}{\code{logical} If TRUE and `out_file`` already exists, the file is overwritten,
Default: FALSE}

\item{verbose}{\code{logical} if TRUE, extended processing information is sent to
the console in the form of messages}
}
\value{
\itemize{
\item if out_type == rastobject:  \code{*raster} corresponding to the reclassified raster
\itemize{
\item if out_type == "rastfile": name of the file where it was saved (either corresponding to
\code{out_file} or to the name of the temporary file created (if \code{out_file == NULL}))
}
}
}
\description{
function to reclassify values of a raster object or raster file
based on a reclassification matrix which specifies which value in the output
should be taken by different \strong{intervals} of values of the input raster
(simple wrapper for the raster::reclassify function, providing a (somehow)
easier and extended I/O functionality and possibility to set the class names
for the new raster using \code{raster::ratify}
}
\details{
\code{class_matrix} must be a 3-columns \code{data.frame} (or similar), including
the \code{start}, \code{end}, \code{new}and \code{label} columns. It can be easily created by, for example:\preformatted{class_matrix <- tribble(~start, ~end, ~new, ~label
                             0,    1,   NA, NA         # values >=0 and < 1 will be set to NA
                             1,    5,   1,  "Class_1", # values >=1 and < 5 will be set to 1
                             5,    7,   2,  "Class_2", # values >=5 and < 7 will be set to 2
                           ...,  ..., ...,  ...,
                           ...,  ..., ...,  ...,
                            11,  100,  NA,  NA)   # values >=11 and < 100 will be set to NA
}

, or:\preformatted{class_matrix <- data.frame(start = c(0,  1, 5, ..., ..., 11),
                           end   = c(1,  5, 7, ..., ..., 100),
                           new   = c(NA, 1, 2, ..., ..., NA),
                           label = c(NA, "Class_1", "Class_2", ..., ..., NA)
                           )
}

Note that it is \strong{FUNDAMENTAL} for proper functioning that ALL values of the
original rasterare "covered" in \code{class_matrix}. Values not falling in any
of the intervals will be kept at their original values ! (checks for this
will be implemented in the future!)
}
\examples{

# create a raster with values equal to rows number and assign a RAT
# to it
  library(magrittr)
  in_rast <- raster::raster(ncol = 20, nrow = 20) \%>\%
  raster::init("row")
  plot_rast_gg(in_rast, rast_type = "continuous", scalebar = F,
               direction = -1)

# build a reclassification matrix

  class_matrix <- tibble::tribble(
                         ~start, ~end, ~new, ~label,
                           -Inf,   5,    1, "pippo",   # Values  < 5 --> 1
                              5,   8,    2, "pluto",   # >=5 and < 8 --> 2
                              8,   12,   2, "pluto",   # >=8 and < 12 --> 2
                             12,  15,   NA, NA,       #>=12 and < 15 --> NA
                             15,  Inf,   3, "paperino")# Values >=15  --> 3
# reclassify and assign class names
out_rast <- categorize_rast(in_rast,
                        class_matrix)
out_rast
plot_rast_gg(out_rast, scalebar = F)


# reclassify a land cover map with N classes to a 0-1 mask, retaining classes 5
# and 9, putting the rest to 0 and values >= 11 to NA
# Open  the masking file

# in_mask <- raster(in_maskfile)
# setup the reclassification matrix

#  class_matrix <- tibble::tribble(
#                ~start, ~end, ~new, ~label,
#                     0,   0,   NA, NA,
#                     1,   5,   0,  NA,
#                     5,   6,   1,  NA,
#                     6,   9,   1,  NA,
#                     9,  11,   1,  NA,
#                    11, 100, NA)

# reclass_file = "/home/lb/Temp/buttami/pippo_reclass.tif"
# outmask = categorize_rast(in_rast,
#                        class_matrix,
#                        r_out = TRUE)
# plot_rast_gg(outmask)

}
\seealso{
\code{raster::reclassify} \code{raster::ratify} \code{\link{set_rastlabels}}
}
