% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_rast_gg.R
\name{plot_rast_gg}
\alias{plot_rast_gg}
\title{Plot a raster object using ggplot}
\usage{
plot_rast_gg(in_rast, band_names = NULL, bands_to_plot = NULL,
  facet_rows = NULL, xlims = NULL, ylims = NULL, zlims = NULL,
  zlims_type = "vals", outliers_style = "recolor",
  outliers_colors = c("grey10", "grey90"), basemap = NULL, zoomin = 0,
  scalebar = TRUE, scalebar_dist = NULL, transparency = 0,
  na.color = NULL, na.value = NULL, palette_type = "gradient",
  palette_name = NULL, leg_type = NULL, leg_labels = NULL,
  leg_breaks = NULL, no_axis = FALSE, title = NULL, subtitle = NULL,
  theme = ggplot2::theme_bw(), verbose = TRUE)
}
\arguments{
\item{in_rast}{\code{Raster} object to be plotted. Both mono- and multi-band
rasters are supported}

\item{band_names}{\code{character(nbands)}, array of band names. These will used
to populate the "strips" above each plotted band. If NULL, bnames are
retrieved from the input raster using \code{sprawl::get_rastinfo}, Default: NULL}

\item{bands_to_plot}{\code{numeric array}, array of band numbers to be plotted (in
case \code{in_rast} is multi-band. If NULL, all bands are plotted separately
using facet_wrap, Default: NULL}

\item{facet_rows}{\code{numeric}, number of rows used for plotting multiple bands,
If NULL, one row for each band is used (to be changed !), Default: NULL}

\item{xlims}{\code{numeric(2)}, minimum and maximum x coordinates to be plotted.
If NULL, the whole x-range is plotted, Default: NULL}

\item{ylims}{\code{numeric(2)}, minimum and maximum y coordinates to be plotted.
If NULL, the whole y-range is plotted, Default: NULL}

\item{zlims}{\code{numeric array [2]} limits governing the range of
values to be plotted (e.g., c(0.2,0.4)), Default: NULL}

\item{zlims_type}{\code{character} type of zlims specified.
\itemize{
\item "vals": zlims indicates the range of values to be plotted
\item "percs": zlims indicates the range of percentiles to be plotted (e.g.,
specifying zlims = c(0.02, 0.98), zlim_type = "percs" will plot the
values between the 2nd to 98th percentile)
}}

\item{outliers_style}{\code{character ["as_na" / "recolor" / "to_minmax"]} specifies how
the values outside of the zlims range will be plotted.
\itemize{
\item If == "as_na" (the default), out of bounds values are plotted using the
color specified for na.color;
\item If == "recolor", they are plotted using the oob_high_color and oob_low_color
arguments
\item If == "to_minmax" they are plotted using the minimum and maximum colours
of the current palette (using scales::squish())
\code{scales::squish}
}}

\item{outliers_colors}{\code{character (1/2)} specifies colors to be used to plot
values outside zlims. If only one color is passed, both values above max(zlims)
are plotted with the same color. If two colors are passed, the first color
is used to plot values <. min(zlims) and the second to plot colors > max(zlims)}

\item{basemap}{\code{character} If not NULL and valid, the selected basemap is
used as background. For a list of valid values, see \code{rosm::osm.types()},
Default: NULL}

\item{zoomin}{\code{numeric}, Adjustment factor for basemap zoom. Negative values
lead to less detailed basemap, but larger text. Default: 0}

\item{scalebar}{\code{logical} If TRUE, add a scalebar on the bottom right corner,
Default: TRUE}

\item{scalebar_dist}{\code{numeric} Width of the scale bar (in km). If NULL, it
is computed automatically on the basis of the range in x direction,
Default: NULL}

\item{transparency}{\code{numeric [0,1]}, transparency of the raster layer. Higer
values lead to higher transparency, Default: 0 (ignored if basemap == NULL)}

\item{na.color}{\code{character}, color to be used to plot NA values,
Default: 'grey50'. TO set to "invisible" use na.color = "transparent"}

\item{na.value}{\code{numeric}, Additional values to be treated as NA, Default: NA}

\item{palette_type}{\code{character} Type of brewer color ramp to be used. Possible
values are \code{gradient}, \code{diverging} and \code{categorical}, Default: 'gradient'}

\item{palette_name}{name of the palette to be used. If NULL, the following
defaults are used as a function of palette_type:
\itemize{
\item categorical --> "Set1"
\item gradient    --> "Greens"
\item diverging   --> "RdYlGn")
Note that if a wrong palette name is specified, plot_rast_gg reverts to
the default values. Run \code{RColorBrewer::display.brewer.all()} to see a list
of available palettes, Default: NULL
}}

\item{leg_type}{DESCRIPTION NEEDEDD}

\item{leg_labels}{\code{character (n_leg_breaks)} labels to be used in the legend
\itemize{
\item If palette_type is "categorical", the number of labels must correspond to
the number of unique values of the raster to be plotted. If NULL or not valid,
the legend will use the unique raster values in the legend (see examples)
\item If palette_type is "gradient" or "diverging" the number of labels must be
equal to the number of breaks specified by "leg_breaks". If this is not
TRUE, leg_breaks and leg_labels are reset to \code{waiver()} (TBD),
Default: NULL (the default ggplot2 \code{labels = waiver()} is used)
}}

\item{leg_breaks}{\code{numeric (n_leg_labels)} Values in the scale at which
leg_labels must be placed (if palette_type != "categorical"). The number
of breaks must be equal to the number of labels specified by "leg_labels".
If this is not TRUE, leg_breaks and leg_labels are reset to \code{waiver()}
(TBD)  Default: NULL (the default ggplot2 \code{labels = waiver()} is used)}

\item{no_axis}{\code{logical}, If TRUE, axis names and labels are suppressed,
Default: FALSE}

\item{title}{\code{character}, Title of the plot, Default: NULL}

\item{subtitle}{Subtitle of the plot, Default: NULL}

\item{theme}{\code{theme function} ggplot theme to be used
(e.g., ggplot2::theme_light()), Default: ggplot2::theme_bw()}

\item{verbose}{\code{logical}, If FALSE, suppress processing message,
Default: TRUE}
}
\value{
a \code{ggplot}
}
\description{
Plot a raster object using ggplot witn an (optional) basemap.
The function allows to:
\itemize{
\item Plot a single- or multi-band image using facet_wrap (args \code{bands_to_plot},
\code{facet_rows})
\item Add an optional basemap to the plot, and adjust transparency of the
overlayed raster (args \code{basemap}, \code{transparency})
\item "Easily" select different palettes (args \code{palette_type}, \code{palette_name})
\item Easily control plotting limits on the z-dimension, specifying either
values or quantiles ranges (args \code{zlims}, \code{zlims_type})
\item "Easily" control breaks and labels in legends (args \code{leg_type}, \code{leg_breaks},
\code{leg_labels})
\item Automatically add a scalebar to the plot (args\code{scalebar}, \code{scalebar_dist})
}

See the description of the arguments for details on their use
}
\examples{
\dontrun{
#single band plot
 in_rast <- raster::stack(system.file("extdata/OLI_test",
  "oli_multi_1000_b2.tif", package = "sprawl.data"))
 plot_rast_gg(in_rast, basemap = "osm",
                  palette_type = "diverging",
                  na.value = 0,
                  title = "OLI", subtitle = "Band 2")

 #Change basemap and transparency
 plot_rast_gg(in_rast, basemap = "stamenbw",
                  palette_type = "diverging",
                  palette_name = "RdYlBu",
                  no_axis = T,
                  na.value = 0, transparency = 0.2,
                  title = "OLI - 15/06/2017",
                  subtitle = "Band 2 - Green")

#Multi band plot with selection of bands
 in_rast <- raster::stack(system.file("extdata/OLI_test",
  "oli_multi_1000.tif", package = "sprawl.data"))
 plot_rast_gg(in_rast, basemap = "osm", bands_to_plot = c(1,4),
                  palette_type = "diverging",
                  na.value = 0,
                  title = "OLI", subtitle = "Band 2 vs band 4",
                  facet_row = 1)

#Adjusting limits and changing palette
 in_rast <- raster::stack(system.file("extdata/REYE_test",
                          "REYE_2016_185_gNDVI.tif",
                          package = "sprawl.data"))
 #vanilla
 plot_rast_gg(in_rast,
             palette_type = "diverging", palette_name = "RdYlBu",
             title = "gNDVI - 14/03/2016", subtitle = "From RapidEye")

 # limits adjusted on the 1st and 100th percentile to remove very low
 # values outliers and better use the palette
 plot_rast_gg(in_rast,
             palette_type = "diverging", palette_name = "RdYlBu",
             zlims = c(0.2, 0.8), zlims_type = "percs",
             title = "gNDVI - 14/03/2016", subtitle = "From RapidEye",
             outliers_style = "recolor", outliers_colors = "grey90")
}
}
\author{
Lorenzo Busetto, phD (2017) \href{mailto:lbusett@gmail.com}{lbusett@gmail.com}
}
